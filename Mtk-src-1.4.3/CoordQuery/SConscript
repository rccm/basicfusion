Import('env')

env.BuildDir('obj', 'src', duplicate=0)

file_list = Split("""obj/MtkBlsToLatLon.c
                     obj/MtkBlsToLatLonAry.c
                     obj/MtkBlsToSomXY.c
                     obj/MtkBlsToSomXYAry.c
                     obj/MtkLatLonToBls.c
                     obj/MtkLatLonToBlsAry.c
                     obj/MtkLatLonToSomXY.c
                     obj/MtkLatLonToSomXYAry.c
                     obj/MtkSomXYToBls.c
                     obj/MtkSomXYToBlsAry.c
                     obj/MtkSomXYToLatLon.c
                     obj/MtkSomXYToLatLonAry.c
                     obj/MtkPathToProjParam.c
                     obj/MtkPathBlockRangeToBlockCorners.c
                     obj/MtkPixelTime.c""")

obj = env.SharedObject(file_list)
Return('obj')

env.StaticLibrary('lib/CoordQuery', file_list)
#env.SharedLibrary('lib/CoordQuery', file_list)

#---------------------------------------------------------------------
# Unit Tests
#---------------------------------------------------------------------

unit_tests = Split("""MtkBlsToLatLon_test
                      MtkBlsToLatLonAry_test
                      MtkBlsToSomXY_test
                      MtkBlsToSomXYAry_test
                      MtkLatLonToBls_test
                      MtkLatLonToBlsAry_test
                      MtkLatLonToSomXY_test
                      MtkLatLonToSomXYAry_test
                      MtkSomXYToBls_test
                      MtkSomXYToBlsAry_test
                      MtkSomXYToLatLon_test
                      MtkSomXYToLatLonAry_test
                      MtkPathToProjParam_test
                      MtkPathBlockRangeToBlockCorners_test
                      MtkPixelTime_test""")

lib_depend = Split("""SetRegion
                      CoordQuery
                      UnitConv
                      FileQuery
                      misrcoord
                      Util""") + env['LIBS']

lib_depend_path = Split("""#SetRegion/lib
                           #Util/lib
                           lib
                           #UnitConv/lib
                           #FileQuery/lib
                           #misrcoord""") + env['LIBPATH']

if env['RUN_UNIT_TESTS']:
   for file in unit_tests:
      test = env.Object('obj/' + file + '.c')
      test_exec = env.Program('bin/' + file, test, LIBS= lib_depend,
                 LIBPATH= lib_depend_path)
      test_alias = env.Alias('test',[test_exec],test_exec[0].abspath)
      AlwaysBuild(test_alias)
